import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
import time
import urllib.parse

# –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π Telegram ID (—Ç–æ–ª—å–∫–æ —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º)
ALLOWED_USERS = [7777713334]

BOT_TOKEN = "–í–ê–®_–¢–û–ö–ï–ù_–¢–£–¢"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

MAX_VIEWS = 50  # –ú–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ —Ç—É—Ç

def is_allowed(user_id):
    return user_id in ALLOWED_USERS

def create_whatsapp_link(phone, name, price):
    text = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–¥–∞–∂–µ {name} –∑–∞ {price} –µ—â–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ?"
    text_encoded = urllib.parse.quote(text)
    phone_clean = phone.replace("+", "").replace(" ", "").replace("-", "")
    return f"https://wa.me/{phone_clean}?text={text_encoded}"

def create_telegram_link(phone, name, price):
    text = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–¥–∞–∂–µ {name} –∑–∞ {price} –µ—â–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ?"
    text_encoded = urllib.parse.quote(text)
    return f"https://t.me/share/url?url=tg://&text={text_encoded}"

async def send_advertisement(ad):
    name = ad['name']
    price = ad['price']
    link = ad['link']
    phone = ad['phone']

    whatsapp_link = create_whatsapp_link(phone, name, price)
    telegram_link = create_telegram_link(phone, name, price)

    message = (
        f"üõç –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {name}\n"
        f"üí∞ –¶–µ–Ω–∞: {price}\n\n"
        f"üîó –°—Å—ã–ª–∫–∞: [–û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É]({link})\n"
        f"üìû –ù–æ–º–µ—Ä: {phone}\n\n"
        f"üü¢ WhatsApp API: [–°–≤—è–∑–∞—Ç—å—Å—è –≤ WA]({whatsapp_link})\n"
        f"üì® –¢–µ–ª–µ–≥—Ä–∞–º: [–°–≤—è–∑–∞—Ç—å—Å—è –≤ –¢–ì]({telegram_link})"
    )
    return message

async def parse_youla():
    options = Options()
    options.add_argument("--headless")
    options.add_argument("--disable-gpu")
    options.add_argument("--no-sandbox")
    driver = webdriver.Chrome(options=options)

    ads = []

    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π Youla
    categories = [
        "https://youla.ru/moskva?q=&max_view=50"  # –ø—Ä–∏–º–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º
        # –î–æ–±–∞–≤—å –¥—Ä—É–≥–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    ]

    for category_url in categories:
        driver.get(category_url)
        time.sleep(3)  # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

        items = driver.find_elements(By.CSS_SELECTOR, "a.snippet-link")
        for item in items:
            try:
                link = item.get_attribute("href")
                name = item.find_element(By.CSS_SELECTOR, ".snippet-title").text
                price = item.find_element(By.CSS_SELECTOR, ".price").text

                driver.get(link)
                time.sleep(2)

                # –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–∞–π—Ç–∞, –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥)
                phone = driver.find_element(By.CSS_SELECTOR, ".seller-phone").text

                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –ø—Ä–æ–¥–∞–≤—Ü–∞ (–ø—Ä–∏–º–µ—Ä, –Ω—É–∂–Ω–æ –ø–æ–¥—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥ —Å–∞–π—Ç)
                reviews = driver.find_elements(By.CSS_SELECTOR, ".seller-reviews")
                if reviews:
                    continue  # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –µ—Å—Ç—å –æ—Ç–∑—ã–≤—ã

                # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
